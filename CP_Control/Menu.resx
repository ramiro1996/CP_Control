<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxAQDxUPEBAQFQ8VFRYVFxgVFRgYFhcRGBcWGRUXFRkY
        HSogGBolGxYVITEhJikrMS4uFyAzOTMsOCgtLiv/2wBDAQoKCg4NDhsQEBouIiAgLS03LSsvLy0vList
        LS0tLS0rLS0tLS0tLS0tLS0tLS0tLS0tLy0tLS0tLSstLS0tLS3/wAARCADpANgDASIAAhEBAxEB/8QA
        HAAAAQUBAQEAAAAAAAAAAAAAAQACBAUGAwgH/8QAQxAAAgEDAgMEBwUHAgMJAAAAAQIDAAQREiEFEzEG
        IkFRFDJCYXGBkVJikqHRByMzU3KxwYKiQ2PhFSQ0NXN0stLw/8QAGQEBAAMBAQAAAAAAAAAAAAAAAAEC
        AwQF/8QAKREAAgIBAwQCAgEFAAAAAAAAAAECESEDEjEiQVFhMpETcQRCUoGxwf/aAAwDAQACEQMRAD8A
        +PUaFGgCKIoURQBFEUBRFAGnU2jQDhRFNo0ARTqaKcBQBo0gKcBQAFGjijioAKNLFHFSBUaFKgDRoUqA
        dRptGgDRptHNAGlQpUBUCjTaIoB1GgKVAOoihRoAijQo0AaNNq44J2avb3/w1u7qfbPdjHvLtgfTNQ2l
        ySlZVinAV9Gtv2ZRQLzOJcQiiAGSseNgOuWfc/Jani17OWzrEYZ53aQR5bWV1nTvlioIw6nIyDmsXrx7
        ZL7H3PllEMv2h9RX2GTjvC7clIeEW3MTRrUpHqQSZ0HOk59jPlrFHh/bS3uLWSaLhVqZIWXXEQmWiZWO
        qLud4jQ2V22GRnpVfyy/tIo+QCnaa+q33a/hWlOfwa3JkRJBoSLOh0Vsk6R4kgfAmutpZdnb5Ay29xbs
        zKgC692YkLgIWGMq2+w7pPQZqfy+UKPkumlivp037MIbhTJwziMUwBxhiGGfLXH0+YrH8a7KXtnn0i3d
        V+2MMh+DLt9cVaOpF9yKKHFDFdWjIphFaJkNDKNGhViBUabRoA0abRoA0qFKgKmjQFGgDRoUaANEUKNA
        EVYcF4PcXkvKt4y7eJ6Kg83bwH/7FWvY7sjLfvrJ5dqp78nicdVj8CfM9BWp472kFlF6JwuECAZV5kIY
        8zo2MZww+03j4VjLUztjz/o1jp4uXBY8H7DWVlh7kNd3XsxqMorAZ9X6d59vdWf4z+0a/aYQogtY0cAx
        Bf3mAwyHJG2cYwoHxNZ25drhGhkCtOM3EUgGl5BjEitj2iO9t7UePHNWVj2gmneK3lMcocR6OcAyhyB3
        Cx7wDEHBB2LDw6UUHzLJZyXEcHbilr+9vEYk3Cxa1bc823yjZOT6ygncet8Rk8OEKbmGBACZYLqEN/7e
        QhVP+l10/wCpas7e4W5uo5oI8T2+qGe3LZaW2DMpaEn1yFZwUO4wuM1H7LQNY8TuInGRDb3JJPQogV4n
        +oiPxNLxXciskC64tp4nLckakadw4+3CW0su33QMeRA8qkCGSzhnKOQ6Xdry3HiBHdOrDzBVlyPeRVJD
        CWi19WDgH4MDufmDWm45IDwmwx67tKW8SeSBEm3wfFJdiEjj2gt/SXt7i3jCrcRomhfVS4jGmRBnooAD
        D7vuFWt7cw2tkVjImM8hjQoxVRDBGsb4bqwYyMMjGctvTOEyRQIeFzltVztK6kf92lYARqPM9BIPJtO+
        DUDtPaGKeKxypNtEkTEeqZmLSzMPdl/otUvNE0WfZHiDGC43WMW5iugsQ5YMaCVHU43YZeInJOasOy37
        QLtRILllngSJnIcDVnUiqob3luhB6VV9jOEuZJBICEmtp0CdJJFK6gUXB8VHeO3TrU831vwqFojbwSX7
        6WKeukAG6CZj/EkBOdIGAarKm6FGg4h2Q4fxJVktv+63bpzRE2BqQkgM0fsgnxGPhXzHtBwC4speVcRl
        W8D1Vh5o3Q1Y8P4pNI91cyyMZOQzF84IcsgTBHTG2MdMV9A4bxuK4to7Ti3LYSRcwMxxIoGo63AHcUJp
        75IOSBg52lSlAho+KkU01r+3HYuSwbmo3NsnI0SDwz0WTG2fIjY+47VkTXTGSkrRRobSpUK0KhpUKVAO
        pUKVAVVGgKNAGiKFGgCK0nYzsy19KWfK2se8j5xn7inzxuT4D4iqfg3DZLqdII/WY7nwVR6zH3Af4rf9
        pJJIbYWHDVDJFtOFGqTpndcb5O7EZOcCstST+K5Zrpx/qfBw7R8fEwbh1jiJISAiboZGiOSgz1BAyBnL
        Ee+shdM6H0mF5EDsQ2CVdJvWZG8d86gfEZ8QabdsZ4zcH+NFoSbbGR6sch8jsFPvC+dWNrcNdWU0LnVN
        BpuEb2jGvdkViN2wGyCfOojFRQb3Ml8B7RTMumUNcGF1lVXOWMeVVuWx3V1JBG+CGcEEVH7X2qrcG6ts
        G1Z8Lp/4UqYDRMPAgjUPMHaofZKcR3akjIKyDHxRsfmBUfhfFWhLa1EkMoxNGejg75B9lxnIYdDU7ala
        I3WqZI44x9KaRMqXKyqVyCC6hsgjcHJJ2rYWnEhfWd1O3/mUdm0L/wDNg1oeZt7QCkH+r31l+1lqsVzy
        4yzJHDCAWxkroGCceO46V37L8dit51kniLDBRnRsMY2GGWRSMSD6HYbnpVZLdG12LRdSpkfgUv73lEAr
        Mpi36CRgRC3xDlfqa2BjS24ZZXcgHNjSYQo3U3ErhgxHkioW+JWs/wAT4D6LcxhTqhknh5DD24mZSD8R
        kA1N/aVxAPemFT+6t10KPJm70h+OcfSs5PdJUWSpOzO6mzqydR72T1JznPvOd62/aiZIrkXmB6TPBE6R
        sv8ADLR6HkkDDGcqQq+YJNUzW4stEzqGuNEYhjIyFbQpeaQeOCSFXxIz4VKv4ZruysphqknZ57c+LM3M
        MiZ+TN8qrJ5TJSJvYd5td1ehmaWOBlV2OTz5SAuWPuDHJ6VmLzRkhWLtklpD7TeJXxxnxO5rccT4fHZW
        K2LXcMTSHmXJwXkY4GmNUXfSPM46e+s/ZzWMciiG3nu5ywVecRHEXJwP3aZZt/AmqRllsNHTgtksNlJd
        TplZJI0hjIObhky+FXxTXoz5hSKq76TlBlmJku5G1T5O4wciJyPvYZlHiqr4YrY8R7TRrcKJILaW4iVh
        LKhkjSCLGCkJ1Elx9oY3IA8xQcP4Nw+4Oppbu1Q7hZuWQxPRUl26/aKH51eMnyyrRouzva1VS2sLmDm2
        lxbAOAmpUPMkiwsajAjAj3x0znwrLdvuyLcPmDR5ezk/hv10nry2PnjcHxHwNS7+2aYrbm7s7eFV5aRR
        M0pEQyx5jIO/1dmYnG5O1aLsrxGxuYDwZ7gzxFAIzynVlYZLHUcgDOCo2xjG9RezqX+SNtnyY001Y8f4
        TJZ3L20vrKdiOjofVce4j6bjwqtNdkWmrRk0KlmhSqxAaNClQFZRpoo0AaNCrHs9w70m6jg9lmy39C7t
        +Qx86hulZKVujbdkrT0Oxa5bC3NwCIywJCJvoLY6Dq592KzZRlHMiIu3zl5NTMqt92IEMN894jetH2td
        7tZbe3w3I0YRM62xtIPJgMrgD7NZHTHaEHUJboeCseVF7mZCDI3uBx55rnhm2+WbTxhcIsbftZeFs8y1
        JxoKyRKCV6FCSuSNuhNW/Br6HmiZ+GopAZS0EqqpRhhg0bEBgQelZocd5j5u4IpgfFRypVH3HTH0bNC/
        4OSOdbFp7fzA1SRn7MqDdT7+hq7gu+Cqk+2TSWfZA80T2jiSEau450zLlWAGOj9QMg1jbmzkhOiVGRum
        GGDt1qRwK8FtcpI2VUHDdQdJBBPyzn5VqL/iSGX/ALP4kebGqR6bgfxY3ZQwfI9ZO8OvhS5RflE1GS8E
        PjAQ3VtzDiOa0gUsfDUpQMfcGCk+7NUSRFJTFIuGDGNgfBs6T9CKv+3vDjClmNQdBbmLWPVbS2Vx8VbP
        1qs49GXMM3jPCmT5yr+7f57Ln40g7SImss2/YK5Xmpwy4QM0IFxGW3Mc+rWyjyAV128wazPDbL0riTJM
        e7zZZJT/AMtGYv8A2x86suzkunj5yerSr/sP/wBaZdxG2TiFwdjLM1rF5kMxeZh/pwPrWPEnXdI15ivR
        VcR4k1zPPdN7Wyj7KMwVFHlhMj61s+xPF2tuEXU2BlJTy89OY6IPyODWIe30WfNG6ySKM+RVWJX45Ofh
        ir+Elezzffu9vM4KLt81xTUinFL2iIN3fozTSliWZiWJJJJ3JPUk1seynA7kW0l9FEzTkcu2GwwW2ebJ
        2AVdWD51XycKtbBVe+JluSNQtlOFXy57dQPcOtWpub94PT7htCDa2hyIoVz6sjgkZRRuAcliB4VE5Wuk
        lR8nMdn7m2gEYaySZzrkaadNSkEhEQHPQZYnzbbpmoln2PeeQ8y+s2bGTy5efM3uAOMn4msvOmWzrEkj
        H2csWYnzI3JNXNzOnDm5UQRr9f4krYYQsRkpCvTWM7uc+IFS4yXDyVtdyXxj0ewTkRQsbmRMy+kAEpGT
        lUKqcAtgMVydsA53qP2VvLiW9iGt9CFpNCdxMIrEdxML1x1FQDx9pEEV2OfGPVZmxNGfNJPEfdYEH3VZ
        WkEUNrJNHcBHuhyYjOOWRGCDOwZcgg5RQ3TrVqqNPlkcvBoO1Ea8U4Yt2hR7y17s2gbMBjm6fMZ7wPjg
        4r5lW+7AarO75Us1vyp1KFdZ7zdUZCVw3iNjvqrK9qeGeiXktv7KtlP/AE23X8jj5VOi9rcPoaitKRVU
        qFKukwHUKFKgK6jTaNAGtv8As5tiiz3enUyry0HiT6zY+PcH1rECttnk8EUAPmZ8nTsdJYk5PkQuPnWW
        txt8mmlzfggcWuryKUqjz6mxIGDHABOQqAd0AEEE9SQfDqP+x3u8SxJGJznmxagMn+bHg9D4jwPnmq23
        4sypylhieMEkCRTLgnrpye7nA2A8KtOFT3IImENvEue6VtV1sfERgDPzJA38aNNLBKpnGWwjhGPRJ5pf
        EksIlPkAq6mPxxT7C8vom1W1qYj0yluwOPeSN6up7yOYsJ1jtCwwZxNGsxPjqjU5wfEdaz19wm8jGpXk
        mgO6yROzow94ByvwNVTvDJarKLS44xxPSfSbfmw47wkhBXHvKjK/GnRR2l7HHMri2khKRYc642XJaMa+
        qgbqCfhvtWatr+4gbKSyxt7mI+oOx+Yq5t+PxSq8N5AmJca5YVCyZX1WZR3WIOfrUuDXC+gpJ4ZaWkE1
        sps7+F24c5Olx3hEd9Low9Vf1ptzYGxAguhzeHs4eKdOsUh6MPDcdV6HqPKncS4lcWscNzZ3PNt2URvk
        ZTnJsCyNuhZcdMbqfMVN4d24t5E5F3bqkbgglRqjIPXK9Rv5Vk93KWDRbeGyBGhh4+hPR5wynwaOVSAw
        925+hrt+02YCaKBfVUPKf65W6/RfzrTrwWCX0SaF9QgcNG2c5hznRnxA8D7qxv7SkIvgx6NEmPlqB/Oq
        6clPUXpEzi4wfsh8OPM4ddJ4xPDOPgTy3/Ij6V9L4Lbi34Zbgxa5UUOkfncNlh8MFuvhjNYj9mtmJXuA
        4JiMaKfInmBwP9v0NfReKLM8eiGVYSdi5XLKOncHQH3npWf8iXVs9/8AC+hHp3GKvzb2DtNdFbvijnUV
        /wCFEx8W88bAZ328OtZLinFJrmQyzyF28M9FHko6KPhWvXgnCF/dy8QDSknWeaoZmz4nfHwz8asLbhXC
        bOZSRLJLgMuVklX3MNK6T8c7VeM4x7Nsq4SfhIp+y/DVs0HE70FUT+DGfXkk9k4PQeWfj4VFm7byuSWt
        bIgknBhB6+bZyfjWm43a8OvZVee+IbGlYzIi6fcFPQnxzv0qsvOH8HtW5Tuwm854pnT4hQAp+O4qIyi3
        ck7Dg1iLwROG9qpGPc4dYFAe8dGlQPvOchak3najmEhZEuMbCN1iREXbKqxTMq58Rp6VFveGW8kRuDez
        3MKHHLt4lUJ7imwjX36fnVBJxeFdoLOAD7Uw5z/Hvd0fStFCMuEUcmuWXdhd3JkxFw6006g2kDuK2cg5
        14U5HrVP/alba1t7wAZZeW+Pmy/Qlx86yr9oZHTlzJE8QOdIURY+BiwPqDWofRNwJwnNxE5Ycz1gNQbA
        PtDDnB8qSTjJSJi1KLRgaVClXWcoaVCjQFdSoUaAJNb3jrNFY2gUJ3UB1OcKp0Lvj2jv7/hWAfofga+g
        dqLdWitnLopEahQ2SclU3VQCWIx08zkkYrHU+UTXT+LM+3FpIhqaRnmOCAcBEH2ioGSfcfmKjwWtxdZl
        kciPPellYiPPkM7E9dlrtawJzNEWkkZLzT4KrjdyqDY4+Jyajca4o1w43blIMIGO+PFiOmo/l0qy9Ff2
        Slj4dD1M9w48ExFFn4nvEVLi7YTRLy7WG2gj64CljnzJJ3PyrNUal6afOQptcGvtu1HM7t76LLGeo5La
        h7wRt+VNntODzN+6uJYSfNSY8+/UMj61k6VR+JdnRP5H3Vn0Lg3Zh1jlhMsUtpOvrId0lX1HA6Z89/AV
        jJomgkaCdT3ThgOo8njP5jwPQ1y4dfSW8gkhYq3jjow8mHiK2fEkj4tbc6EabuIboepHiufEeKn5Vn1Q
        l1cMvicccoZYcWawktV5iyWkkIUlegxLJhwPAgMuR7j5Vbdv+CvcrFJEuqVG0EeaORufcGGc+RNYmJeZ
        YyIR37eTWM9RHJ3ZB8mANfT+Cyk20JJ35aZ+lY6vQ1Ncmun1pxYuGW0PDrPBYaY1LyP9pvaP12A+FY5e
        IyTE397K8dv3vR4xuWf2WROjaeuo7avdV/2tljEYa4J9GQhtA9aaX2E/pHU/9K+b8Tv3uJTLJjJAAA9V
        UHqovkBU6EN3U+/ca09uF2JbcUjXuxWluIh/NUySN73fI3/pwKZc8ZmkQxFgIfCNBpRfHugf5zmq2jXW
        oI5dzHbfKrvhPHSMQXQ51odir9Y/Jo26rjy8qoqNHFNEKTXBofQJI2abh8spKE6kB/foAfEL/ET3geI2
        ovxJbgDULaO5GziWJdEh8GDYyj+YOx6jFUcF06SCVW74xv5jGMHzBGxq0uuJHUrsBNA4JCy95kI2dA57
        2x6ZJGCKo4s0UkTBbXMBDulhFkZVmWLBHmuM5rQcEuGmtLyN54ZSYj/DGAO43XYZ6D6VlWvzGoXSj2b5
        KAIoZGPUjOQsg8R0Pz20PZEOouQxVkMOpGVQAykOM7AfAg9CDWWounJppvqwYMGjTI/VHwFOrqOYNGm0
        qAr6NCjQCNbPtLMTZ2jqCXZAgI6jKLnT944xn41jRWwefVwdXUZeJtOfFRq0kj34bHzrLU5TNIcNFBcJ
        yY+WSOa4BbByFj3wufMkb48sVBrvdbpE3hy9HzRmH9ip+dR60RRho0KVSQOo02jQBqZwviD28qzRnvDq
        PBl8VPuNQ6VQ0nglOj6dacPtrlvTIvVnjaOVfBgwwcj2XBH+avogEUKNlUAfAAY3rHfs8uDyZI/Jww/1
        DB/+NWfa++MVo+Dhnwg/1dfyBrzpxbnsO+EkobjGdp+MG6nLAnlLlYx93xb4nr8MVUU2jXoxioqkcDdu
        2GjTaNSQGlQo0Aam2ZUxSK4yAyNkdVzlWI+qZHjioOam8Mj1l0yBqjbr0yMEfnVZcErkdbS8tjFJpaFt
        zndckdyRT1GPcemQa1PZqTl2l5syhFYaSdShtDZKk777dfdWORgRy32AJwT7LeIP3fPy61qyzRcJk1jE
        kh0H7wBCq34V/LPjWWqsftmum834McKNDNKtzENKhSoCBRptGgHVqux7iWG4s29tSw+Y0n6HSfnWUqfw
        K+5Fwkvsg4b+htj+vyqk1cS8HTGTqViRTsdcufiNC/4NRq0XbS2CSIy+q/Mb5kqT+vzrOVMHasiap0Oo
        02jVioaNNo0A6lQo0BvOwcQW3Z/FpCPkoA/ya5/tAyYoj7IkOfiV2/sad2HmBtivisjf7gD+tWnGrIXE
        DR+OMr/UNxXA3WtbO1K9KkfM6NNo13nEGjTaNAGlQo0Ac13tbgITkAqw0ttnuH1se+o9LNATJF1toJHN
        B0gno/guo+Z238ds1fdrX5UNvaA+qoY/IYH56vpUTs3Y8y4jdvUjQO3xBKp/b/bVfxy959w8nhnSv9K7
        D9fnWPymvRrxBvyQqVDNKtjINKhSoCDRptGgDRoUaA1difTbEwHeeH1c+I9n8u79KyxGPj/mpHDL5oJV
        lXw6j7S+INXPaSxV1F7BvG+748D9rH5H31kul12Zq+qN90Z6jQpVqZDqVCjQBo02jQGj7FXWmdo/B1z/
        AKl3/sT9K2wavnnZcH0tMeAYn4aT+ore6q4f5C6zt/jvpPnHFYtFxKnlI/0JyPyNRqsu0kJS6kJ9o6x8
        CP1BFVldkeEcklTYaNNo1YqGjTaVAOpD86FX/Z2xVQbubaNN1z4nz/wPfVZS2qy0Y26J/EpBZ2awqf30
        igHzAx3/ANPnWSqTxK+aeVpG8dgPJfAVFqIRpZ5ZM5W8cDqVClVygaVClQEGjQpUA6jTaNAGrjgHF+Qx
        R94H2YdcH7Q/yKp6VRJJqmSm07Rdcd4Ryf30R1W7bgjfTnoCfEeRqnq14Lxkw/u3GqA9V64z1xn+1SOI
        8EDDnWhDxH2R1H9P6dRVFJxxL7LuO7Mfoo6NAgg4IwfKnRoWOFBJ8gMmtDMFGnzQOhw6sp94xXPNAazs
        fZYVpz1bKr8Adz9f7VpM1X8Ij0W8a+SD6nc/mamaq87Ue6Vnoaa2xMz20HfjP3WH5is5Ws7WwFoQ4HqN
        v/Sdv74rJV2aLuByayqYaNClWpkGjTRV5w/gwA51yQkY30nqfj5fDqarKSjyWjFy4OXBOFc397IdMC7k
        9NWOoB8vM0uOcV5xCR7QJ0A8SPH9BTeL8YM37tBpgHQdMgdMjwHuqrqsYtvdItKSS2xDmlQpZrQzHUqb
        RoA0qFKgIVGm0aANGhSoB1KhRoA1KsOISwNqjbHmDup+IqJRqGrwyU6yjXW3ErW5wJo0EnkwGCfc1d7t
        XhUi1tlyejKV29+DuaxVTrLis0WyudP2TuPl5Vi9Lx9Gy1fP2aGx5s6mG8hYj2XIwfqOh94rpF2dt0bU
        xcgeDEY+e29QI+0iONM0bD3o3+Nj+dSIZrFsHKE/fznP+qs3uXr9Gi2v2XsUysO6ykDbY5GfLalJIFGo
        9B1+FQLYjVqM0ZUDCqoCgefic0Z4y0TrzE1PnfOwHQD6Vltya7sE15FzpJHeB2PtDx+NUt12bjJLIzqO
        ukYP4c/5otZA2/IlnQ4IKsOq4xgbn4iukXE4IUCNPrI8epx8quk4/FlHUvkV44KrHAS5X7zaCPmAc0V7
        MvneVcfA11uO0y9I4yfexwPoN6p7zik0uzMdPkNh/wBa2X5H6MZPTXsthLa2nqfvZvPy/wAD5b1UX1/J
        M2qRs+QGyj4D/NRBSrSMEsmcpt47Ds0qFKrlA0qFKgHUqbSoB1Km0qAh0aFKgHUabRoA0abRoA0abRoB
        1KhSoB1KhSoA07NNpUAaNClQBo02jQBpUM0qAdSoUqAOaVDNKgDSoUqANKhSoCJmlmvbXokX8uP8I/Sl
        6JF/Lj/CP0oDxNmlmvbPokX8uP8ACP0peiRfy4/wj9KA8T5pZFe2PRIv5cf4R+lNNrF/Lj/CKA8VahS1
        Dzr2damCQuFjTuOUbKgd4AE493eFC5ktYs8wRLhGkOVH8NMaz08MigPGeoedLUPMV7TWCEjISPcZ9UdK
        ZOtvGjSOsQRVLMdI2UDJPSgPGGoeYpah5ivaYt4T0jj8/VHT6VwQ25laIRprVVc90Y0sWAwfPumgPGmo
        eYpax5ivaRtov5cf4RS9Gi+xH+EUB4t1jzFHWPMV7S9Fi/lx/hFRpZbVZVgbkiVlLhcDJRerdNh7zQHj
        bWPMUtY8xXsBOKWJiefMYijGp2aMrhSMhgGUEqR0IyD4ZoycRsVdkblgoCzZjOkAKHI1adJYKQ2kHODn
        FAeP9Y8xS1jzFevxxKzIUhCS7FQq28hcMuNWtAmqPGpd2A6iutxdWkevUE7hUNiMsdT+qoCqdTHbujJ3
        G29AeO9Y8xS1jzFewI+JWLMiqYyZMacRnG5IUM2nCMSrAKxBJUjGRUu2W3k1FEjIVipIQY1DqAcYOOm3
        iCPCgPGmseYpax5ivaPocX8uP8I/Sl6HF/Lj/CP0oDxdrHmKOseYr2h6HF/Lj/CP0pehxfy4/wAI/SgP
        F+seYpV7Q9Di/lx/hH6UaA7UqVKgFSpUqAVVXaPh7XEHLVY2bUGHMYhQR0JwrasddJGD7utWtNoDKXnZ
        V3LuphErtKS2CNStHGEVsDprjBxvjwzXO57KyTcxpFtdcqXSk7ty+cE0FCUy2kqfs+tkeVbCkKAyEnZa
        RnZtMKloyo0yOBEeUU0KoQBkyScnHX1Sd663vZbXzUjjtkje2aHcZOorhe7o7ihstkHfyzvWpoigMfdd
        lppCwBgi1bh0La0HKEfIUaRmLPezkdfVB3qTD2flE6XAW2j0aByULGIgGTUfUHeGsMp07EY8c1p6QoDN
        8T4FNM8rYgBliCayWLwsFYFY+6NSMTucqevXIxDPZJ3Yu626gq+mNclIizwHEZ0jYiJ8nA3fpWvNIUBV
        8O4QI4jCxwoneVBGzKFQymRE2xsNgV6dR0pcRtJXuInWOExLqDlpGVyGBUgKIyGABzuw6np1q1pUBlT2
        RJiYCeRZDqCgEOgQIyQoxkUkhQSc7bsT5Vwueytw7uebF3lb942ouwaFY+W0YUIo7udanONsVsaVAZNO
        z04UACBHMjuGWWUtArGMkIdI5+TGT39PUDoN2x9mbhJearx5SRpQC8hE8hcnVKCpERCMyjTq6g+AFa4U
        qAy0PBrtSiH0cxBpJSRIyss8skkjOF5RDhDIQoLDOMnHhO7L8IktVZXKhSI1VFd3UFAQ0mXAIZ8glRsN
        PU5Jq7FGgFSpUqAVKlSoBUqVKgP/2Q==
</value>
  </data>
</root>